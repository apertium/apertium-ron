DELIMITERS = "<.>" "<..>" "<...>" "<!>" "<?>" "<¶>" sent ;
SOFT-DELIMITERS = "<,>" cm ;
SUBREADINGS = LTR ;

LIST BOS = (>>>) ;
LIST EOS = (<<<) ;

SETS

LIST N = n ;
LIST Np = np ;
LIST Adj = adj ;
LIST Pr = pr ;
LIST Det = det ;
LIST Adv = adv ;
LIST Prn = prn ;
LIST Prnpro = prn pro;
LIST Vbavea = vbavea ;
LIST Vbmod = vbmod ;
LIST V = vblex ;
LIST Vbser = vbser ;
LIST Vaux = vaux ;
LIST Pp = pp ;
LIST Ij = ij ;

LIST Sg = sg ;
LIST Pl = pl ;
LIST Sp = sp ;
LIST M = m ;
LIST F = f ;
LIST Nt = nt ;
LIST Mf = mf ;
LIST Mfn = mfn ;
LIST Mn = mn ;
LIST Fn = fn ;

LIST Nom = nom ;
LIST Dg = dg ;

LIST Ind = ind ;
LIST Def = def ;

LIST Pri = pri ;
LIST Prs = prs ;
LIST Ifi = ifi ;
LIST Inf = inf ;

LIST Să = ("să") cnjsub ;
LIST Inf_a = ("a") pr ;
LIST Gen_a = ("a") det def ;
SET Și = ("și" adv) | ("și" cnjcoo) ;

SECTION

# Entries which are either N or Adj
SELECT Adj IF (0 N) (0 Adj) (-1 N);
SELECT Adj IF (0 N) (0 Adj) (-2 N) (-1 Adj);
REMOVE Adj IF (0 N) (0 Adj) ;

# Entries which are either Pp or Adj
SELECT Pp IF (0 Pp) (0 Adj) (-1 Vbavea) ;
SELECT Pp IF (0 Pp) (0 Adj) (-2 Vbavea) (-1 ("fi") + Pp) ;
REMOVE Pp IF (0 Pp) (0 Adj) ;

# Entries which are either Pp or N
SELECT Pp IF (0 Pp) (0 N) (-1 Vbavea) ;
SELECT Pp IF (0 Pp) (0 N) (-2 Vbavea) (-1 ("fi") + Pp) ;
REMOVE Pp IF (0 Pp) (0 N) (1 Adj) ;
REMOVE Pp IF (0 Pp) (0 N) (1 V) ;

# Entries which are either Pp or Ifi
SELECT Pp IF (0 Pp) (0 Ifi) (-1 Vbavea) ;
SELECT Pp IF (0 Pp) (0 Ifi) (-2 Vbavea) (-1 ("fi") + Pp) ;
SELECT Pp IF (0 Pp) (0 Ifi) (-1 BOS | _S_SOFT_DELIMITERS_) ;
REMOVE Pp IF (0 Pp) (0 Ifi) ;

# Mai (month or adverb)
REMOVE N IF (0 ("mai")) (-1 N) (1 Adj) ;
REMOVE N IF (0 ("mai")) (-1 V) (1 Adv) ;
REMOVE N IF (0 ("mai")) (-1 ("cel")) (1 Adj) ;

# Și (cnjcoo or adv)
SELECT Adv IF (0 Și) (-1 BOS) ;
REMOVE Adv IF (0 Și) ;

# O (ij or det)
SELECT Ij IF (0 Ij) (0 Det) (-1 BOS | _S_SOFT_DELIMITERS_) (1 _S_SOFT_DELIMITERS_) ;
REMOVE Ij IF (0 Ij) (0 Det) ;

# O (prnpro or det)
SELECT Det IF (0 Prnpro) (0 Det) (1 N + F + Sg + Ind) ;
REMOVE Det IF (0 Prnpro) (0 Det) ;

# A (prep or vbavea)
SELECT Vbavea IF (0 ("a")) (1 Pp) ;

# A (prep or det)
SELECT Det IF (0 Gen_a) (1 Dg) ;

# Conjunctiv
SELECT Prs IF (0 Prs) (0 Pri) (-1 Să) ;
SELECT Prs IF (0 Prs) (0 Pri) (-2 Să) (-1 Adv);
SELECT Prs IF (0 Prs) (0 Pri) (-2 Să) (-1 Prn);
SELECT Prs IF (0 Prs) (0 Pri) (-3 Să) (-2 Adv) (-1 Prn);
REMOVE Prs IF (0 Prs) (0 Pri) ;

# Vrea
REMOVE V IF (0 V) (0 Vaux) (1 Inf) ;
REMOVE V IF (0 V) (0 Vaux) (1 Să) (2 Prs) ;
REMOVE Vaux IF (0 V) (0 Vaux) ;

# Avea
REMOVE V IF (0 V) (0 Vbavea) (1 Pp) ;
REMOVE V IF (0 V) (0 Vbavea) (1 Să) (2 Prs) ;
REMOVE V IF (0 V) (0 Vbavea) (1 Inf) ;
REMOVE Vbavea IF (0 V) (0 Vbavea) ;

# Inf
SELECT Inf IF (0 V) (0 Inf) (-1 Inf_a) ;
SELECT Inf IF (0 V) (0 Inf) (-1 Vaux) ;
SELECT Inf IF (0 V) (0 Inf) (-1 Vbavea) ;
REMOVE Inf IF (0 V) (0 Inf) ;

# Al lui (pronoun/det+adj)
REMOVE Prn IF (0 ("al lui")) (1 Np) ;
SELECT Prn IF (0 ("al lui")) ;


# Remove plural if determiner is singular ("fiecare")
REMOVE Pl IF (0 N) (-1C Det + Sg) ;


# Remove dative/genitive by default
REMOVE Dg IF (0 Nom) (0 Dg) ;

# Remove plural by default
REMOVE Pl IF (0 Sg) (0 Pl) ;


# Resources:
# http://visl.sdu.dk/cg3.html
# http://groups.google.com/group/constraint-grammar
# http://kevindonnelly.org.uk/2010/05/constraint-grammar-tutorial/
# http://wiki.apertium.org/wiki/Constraint_Grammar
# http://wiki.apertium.org/wiki/Apertium_and_Constraint_Grammar

