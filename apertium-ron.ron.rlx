DELIMITERS = "<.>" "<..>" "<...>" "<!>" "<?>" "<¶>" sent ;
SOFT-DELIMITERS = "<,>" cm ;
SUBREADINGS = LTR ;

LIST BOS = (>>>) ;
LIST EOS = (<<<) ;

SETS

LIST N = n ;
LIST Np = np ;
LIST Adj = adj ;
LIST Pr = pr ;
LIST Det = det ;
LIST Adv = adv ;
LIST Prn = prn ;
LIST Prnpro = (prn pro) ;
LIST V = vblex vbser vaux vbmod vbhaver vbavea ;
LIST Vblex = vblex ;
LIST Vbser = vbser ;
LIST Vaux = vaux ;
LIST Vbavea = vbavea ;
LIST Vbmod = vbmod ;
LIST Ij = ij ;

LIST Pri = (vblex pri) (vbser pri) (vaux pri) (vbmod pri) (vbhaver pri) (vbavea pri) ;
LIST Prs = (vblex prs) (vbser prs) (vaux prs) (vbmod prs) (vbhaver prs) (vbavea prs) ;
LIST Ifi = (vblex ifi) (vbser ifi) (vaux ifi) (vbmod ifi) (vbhaver ifi) (vbavea ifi) ;
LIST Imp = (vblex imp) (vbser imp) (vaux imp) (vbmod imp) (vbhaver imp) (vbavea imp) ;
LIST Inf = (vblex inf) (vbser inf) (vaux inf) (vbmod inf) (vbhaver inf) (vbavea inf) ;
LIST Pp = (vblex pp) (vbser pp) (vaux pp) (vbmod pp) (vbhaver pp) (vbavea pp) ;

LIST Sg = sg ;
LIST Pl = pl ;
LIST Sp = sp ;
LIST M = m ;
LIST F = f ;
LIST Nt = nt ;
LIST Mf = mf ;
LIST Mfn = mfn ;
LIST Mn = mn ;
LIST Fn = fn ;

LIST Nom = nom ;
LIST Dg = dg ;

LIST Ind = ind ;
LIST Def = def ;

LIST P1 = p1 ;

LIST P1Sg = (p1 sg) ;
LIST P1Pl = (p1 pl) ;

LIST Să = ("să" cnjsub) ;
LIST Inf_a = ("a" pr) ;
LIST Gen_al = ("al" det def) ;
LIST Avea_a = ("a" vbavea) ;
LIST Rel_unde = ("unde" rel adv) ;
SET Și = ("și" adv) | ("și" cnjcoo) ;


SECTION

# Entries which are either N or Adj
SELECT Adj IF (0 N) (0 Adj) (-1 N);
SELECT Adj IF (0 N) (0 Adj) (-2 N) (-1 Adj);
REMOVE Adj IF (0 N) (0 Adj) ;

# Entries which are either Pp or Adj
SELECT Pp IF (0 Pp) (0 Adj) (-1 Vbavea) ;
SELECT Pp IF (0 Pp) (0 Adj) (-2 Vbavea) (-1 ("fi") + Pp) ;
REMOVE Pp IF (0 Pp) (0 Adj) ;

# Entries which are either Pp or N
SELECT Pp IF (0 Pp) (0 N) (-1 Vbavea) ;
SELECT Pp IF (0 Pp) (0 N) (-2 Vbavea) (-1 ("fi") + Pp) ;
REMOVE Pp IF (0 Pp) (0 N) (1 Adj) ;
REMOVE Pp IF (0 Pp) (0 N) (1 V) ;

# Entries which are either Pp or Ifi
SELECT Pp IF (0 Pp) (-1 Vbavea) ;
SELECT Pp IF (0 Pp) (-2 Vbavea) (-1 ("fi") + Pp) ;
SELECT Pp IF (0 Pp) (0 Ifi) (-1 BOS | _S_SOFT_DELIMITERS_) ;
REMOVE Pp IF (0 Pp) (0 Ifi) ;

# Mai (month or adverb)
REMOVE N IF (0 ("mai")) (-1 N) (1 Adj) ;
REMOVE N IF (0 ("mai")) (-1 V) (1 Adv) ;
REMOVE N IF (0 ("mai")) (-1 ("cel")) (1 Adj) ;
REMOVE N IF (0 ("mai")) (-1 ("mult")) (1 Adj) ;

# Și (cnjcoo or adv)
SELECT Adv IF (0 Și) (-1 BOS) ;
REMOVE Adv IF (0 Și) ;

# O (ij or det)
SELECT Ij IF (0 Ij) (0 Det) (-1 BOS | _S_SOFT_DELIMITERS_) (1 _S_SOFT_DELIMITERS_) ;
REMOVE Ij IF (0 Ij) (0 Det) ;

# O (prnpro or det)
SELECT Det IF (0 Prnpro) (0 Det) (1 N + F + Sg + Ind) ;
REMOVE Det IF (0 Prnpro) (0 Det) ;

# A (prep or vbavea)
SELECT Vbavea IF (0 ("a")) (1 Pp) ;
SELECT Pr IF (0 Inf_a) (1 Inf) ;
SELECT Pr IF (0 Inf_a) (1 Prnpro) (2 Inf) ;
SELECT Pr IF (0 Inf_a) (1 Prnpro) (2 Prnpro) (3 Inf) ;

# A/al (prep/det def/det ind)
SELECT Gen_al IF (0 Gen_al) (1 Dg) ;

# Ei (prn or adj)
SELECT Prn IF (0 Prn) (0 Adj) (NOT -1 N) (1 V) ;
SELECT Prn IF (0 Prn) (0 Adj) (NOT -1 N) (1 Vbser) ;
SELECT Prn IF (0 Prn) (0 Adj) (NOT -1 N) (1 Vbavea) (2 V) ;
SELECT Prn IF (0 Prn) (0 Adj) (NOT -1 N) (1 Vbavea) (2 Vbser) ;

# Conjunctiv
SELECT Prs IF (0 V) (-1 Să) ;
SELECT Prs IF (0 V) (-2 Să) (-1 Adv);
SELECT Prs IF (0 V) (-2 Să) (-1 Prn);
SELECT Prs IF (0 V) (-3 Să) (-2 Adv) (-1 Prn);
REMOVE Prs IF (0 V) ;

# Vrea
REMOVE Vblex IF (0 Vblex) (0 Vaux) (1 Inf) ;
REMOVE Vblex IF (0 Vblex) (0 Vaux) (1 Să) (2 Prs) ;
REMOVE Vaux IF (0 Vblex) (0 Vaux) ;

# Avea
REMOVE Vblex IF (0 Vblex) (0 Vbavea) (1 Pp) ;
REMOVE Vblex IF (0 Vblex) (0 Vbavea) (1 Să) (2 Prs) ;
REMOVE Vblex IF (0 Vblex) (0 Vbavea) (1 Inf) ;
REMOVE Vbavea IF (0 Vblex) (0 Vbavea) ;

# Fi
SELECT Vblex IF (0 Vblex) (0 Vbser) (-1 Rel_unde ) ;
REMOVE Vblex IF (0 Vblex) (0 Vbser) (1 Pp) ;
REMOVE Vblex IF (0 Vblex) (0 Vbser) (NOT -3 N) (NOT -2 Pr)(-1 N OR Np) ;
REMOVE Vblex IF (0 Vblex) (0 Vbser) (NOT -4 Pr) (-3 N) (-2 Pr) (-1 N OR Np) ;
REMOVE Vblex IF (0 Vblex) (0 Vbser) (NOT -3 Pr) (-2 N) (-1 N OR Np) ;


# Inf
SELECT Inf IF (0 V) (0 Inf) (-1 Inf_a) ;
SELECT Inf IF (0 V) (0 Inf) (-2 Inf_a) (-1 Prnpro) ;
SELECT Inf IF (0 V) (0 Inf) (-3 Inf_a) (-2 Prnpro) (-1 Prnpro) ;
SELECT Inf IF (0 V) (0 Inf) (-1 Vaux) ;
SELECT Inf IF (0 V) (0 Inf) (-1 Vbavea) ;
SELECT Inf IF (0 V) (0 Inf) (-1 Vbmod) ;
REMOVE Inf IF (0 V) (0 Inf) ;

# Al lui (pronoun/det+adj)
REMOVE Prn IF (0 ("al lui")) (1 Np) ;
SELECT Prn IF (0 ("al lui")) ;


# Noi (Prn/Adj)

SELECT Prn IF (0 ("noi")) (-1 Pr) (NOT 1 N) ;


# Vblex/Vbser

SELECT Vbser IF (0 V) (1C Adj) (2 Să);
SELECT Vbser IF (0 V) (1 Adv) (2C Adj) (3 Să);


# Verbe cu pronume

REMOVE P1Sg IF (0C V) (NOT -2C Prnpro) (-1C Prnpro + P1 + Pl) ;
REMOVE P1Pl IF (0C V) (NOT -2C Prnpro) (-1C Prnpro + P1 + Sg) ;



# Remove plural if determiner is singular ("fiecare")
REMOVE Pl IF (0 N) (-1C Det + Sg) ;






AFTER-SECTIONS

#  Capital letter fixes

APPEND ("Avea" vbavea pri p3 sg) ("avea" vbavea pri p3 sg) IF (-1 BOS) ;
REMOVE ("avea" vbavea pri p3 sg) IF (-1 BOS) ;

APPEND ("Fi" vbser pri p3 sg) ("fi" vbser pri p3 sg) IF (-1 BOS) ;
REMOVE ("fi" vbser pri p3 sg) IF (-1 BOS) ;

APPEND ("Fi" vblex pri p3 sg) ("fi" vblex pri p3 sg) IF (-1 BOS) ;
REMOVE ("fi" vblex pri p3 sg) IF (-1 BOS) ;

APPEND ("Al" det def f sg) ("al" det def f sg) IF (-1 BOS) ;
REMOVE ("al" det def f sg) IF (-1 BOS) ;

APPEND ("Un" det ind f sg nom) ("un" det ind f sg nom) IF (-1 BOS) ;
REMOVE ("un" det ind f sg nom) IF (-1 BOS) ;

APPEND ("Îl" prn pro p3 f sg nom) ("îl" prn pro p3 f sg nom) IF (-1 BOS) ;
REMOVE ("îl" prn pro p3 f sg nom) IF (-1 BOS) ;


REMOVE Imp IF (0 V) ;
REMOVE Dg IF (0 Nom) (0 Dg) ;
REMOVE Pl IF (0 Sg) (0 Pl) ;


# Resources:
# http://visl.sdu.dk/cg3.html
# http://groups.google.com/group/constraint-grammar
# http://kevindonnelly.org.uk/2010/05/constraint-grammar-tutorial/
# https://wiki.apertium.org/wiki/Constraint_Grammar
# https://wiki.apertium.org/wiki/Apertium_and_Constraint_Grammar

